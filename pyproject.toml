# ark_project/pyproject.toml

[build-system]
# Specifies that Hatchling is needed to build the package
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
# Core metadata (replace placeholders)
name = "autork"
version = "0.1.0" # Start with an initial version
authors = [
  { name="Your Name", email="your.email@example.com" },
]
description = "A Python library for automating Nmap reconnaissance tasks."
readme = "README.md" # Specifies the README file
requires-python = ">=3.8" # Your minimum supported Python version
license = { text = "MIT License" } # IMPORTANT: Replace with your chosen license name/file
keywords = ["nmap", "reconnaissance", "security", "pentest", "automation", "network"]
classifiers = [
    # Trove classifiers provide standardized metadata (https://pypi.org/classifiers/)
    "Development Status :: 3 - Alpha", # Start with Alpha or Beta status
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License", # Match your chosen license
    "Operating System :: OS Independent", # Assumes it works cross-platform (Nmap itself is cross-platform)
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: System :: Networking :: Monitoring",
    "Topic :: Utilities",
]

# Dependencies required for the library to run
dependencies = [
    # Add runtime dependencies here if any are added later
    # e.g., "requests>=2.20.0"
    # Currently, autork only uses the standard library.
]

[project.urls]
# Optional links for users
"Homepage" = "https://github.com/yourusername/autork" # Replace with your repo URL
"Repository" = "https://github.com/yourusername/autork" # Replace
"Bug Tracker" = "https://github.com/yourusername/autork/issues" # Replace

# Optional: If you add command-line scripts later
# [project.scripts]
# ark-scan = "autork.cli:main" # Example if you create a cli entry point

# Configuration specific to the build backend (Hatchling in this case)
# Tells Hatchling where to find the actual package code
[tool.hatch.build.targets.sdist]
# Include everything under the 'autork' directory in the source distribution
include = ["/autork", "/tests"] # Include tests in sdist if desired

[tool.hatch.build.targets.wheel]
# Include only the 'autork' directory in the wheel distribution
packages = ["autork"]